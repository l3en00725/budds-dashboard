# Site Migration Workflow
# Comprehensive workflow for migrating websites from legacy platforms to Astro + Sanity + Tailwind

name: "Site Migration Workflow"
version: "2.0.0"
description: "Automated workflow for complete website migration with SEO preservation"

workflow:
  stages:
    - stage: "initialization"
      description: "Project setup and requirements gathering"
      agent: "orchestrator"
      duration: "30 minutes"
      inputs:
        - domain: "string"
        - source_platform: "enum[webflow,wix,wordpress,custom]"
        - business_type: "enum[service_business,ecommerce,real_estate,professional_services]"
        - timeline: "string"
        - special_requirements: "array"
      outputs:
        - project_id: "string"
        - project_config: "object"
        - team_assignments: "object"
      validation:
        - domain_accessible: true
        - business_type_valid: true
        - timeline_realistic: true

    - stage: "site_analysis"
      description: "Analyze existing website structure and content"
      agent: "SiteAnalysisAgent"
      duration: "1 hour"
      dependencies: ["initialization"]
      inputs:
        - domain: "${initialization.domain}"
        - platform_type: "${initialization.source_platform}"
      tasks:
        - crawl_website:
            method: "comprehensive_crawl"
            depth: 5
            respect_robots: true
            include_assets: true
        - extract_content:
            text_content: true
            meta_data: true
            structured_data: true
        - analyze_structure:
            navigation_hierarchy: true
            url_patterns: true
            page_templates: true
        - performance_baseline:
            page_speed: true
            core_web_vitals: true
            lighthouse_audit: true
      outputs:
        - site_map: "object"
        - content_inventory: "array"
        - technical_analysis: "object"
        - performance_baseline: "object"
      validation:
        - pages_crawled: "> 80%"
        - content_extracted: "> 95%"
        - assets_cataloged: "> 90%"

    - stage: "asset_audit"
      description: "Identify and catalog all required assets"
      agent: "AssetAuditAgent"
      duration: "45 minutes"
      dependencies: ["site_analysis"]
      parallel_execution: true
      inputs:
        - content_inventory: "${site_analysis.content_inventory}"
        - site_structure: "${site_analysis.site_map}"
      tasks:
        - catalog_assets:
            images: true
            documents: true
            videos: true
            fonts: true
        - quality_assessment:
            resolution_check: true
            optimization_needs: true
            format_analysis: true
        - brand_consistency:
            logo_variations: true
            color_palette: true
            typography: true
        - missing_assets:
            gap_analysis: true
            priority_ranking: true
            creation_requirements: true
      outputs:
        - asset_inventory: "object"
        - optimization_plan: "object"
        - missing_assets: "array"
        - brand_guidelines: "object"
      validation:
        - asset_coverage: "> 95%"
        - optimization_potential: "documented"
        - brand_consistency: "verified"

    - stage: "migration_planning"
      description: "Plan subdomain strategy and redirect mapping"
      agent: "MigrationAgent"
      duration: "1 hour"
      dependencies: ["site_analysis"]
      inputs:
        - current_urls: "${site_analysis.site_map.urls}"
        - site_structure: "${site_analysis.site_map}"
        - domain: "${initialization.domain}"
      tasks:
        - url_mapping:
            current_structure: true
            new_structure: true
            redirect_rules: true
        - subdomain_strategy:
            staging_setup: true
            testing_environment: true
            production_cutover: true
        - dns_planning:
            record_updates: true
            ssl_certificates: true
            propagation_timeline: true
        - rollback_strategy:
            backup_procedures: true
            recovery_plans: true
            risk_assessment: true
      outputs:
        - url_mapping: "object"
        - redirect_rules: "array"
        - dns_plan: "object"
        - migration_timeline: "object"
      validation:
        - redirect_coverage: "100%"
        - dns_plan_complete: true
        - rollback_tested: true

    - stage: "development"
      description: "Build new site with Astro + Sanity + Tailwind"
      agent: "orchestrator"
      duration: "4-6 hours"
      dependencies: ["asset_audit", "migration_planning"]
      inputs:
        - content_inventory: "${site_analysis.content_inventory}"
        - asset_inventory: "${asset_audit.asset_inventory}"
        - brand_guidelines: "${asset_audit.brand_guidelines}"
        - business_type: "${initialization.business_type}"
      tasks:
        - setup_development:
            astro_project: true
            sanity_cms: true
            tailwind_config: true
            typescript_setup: true
        - implement_design:
            responsive_layouts: true
            component_library: true
            brand_implementation: true
        - content_migration:
            cms_setup: true
            content_import: true
            media_optimization: true
        - functionality_implementation:
            contact_forms: true
            navigation: true
            integrations: true
      outputs:
        - development_site: "url"
        - component_library: "object"
        - cms_setup: "object"
        - functionality_status: "object"
      validation:
        - responsive_design: "all_breakpoints"
        - content_accuracy: "> 98%"
        - functionality_complete: "100%"

    - stage: "seo_implementation"
      description: "Apply schema markup and SEO optimizations"
      agent: "SEOAgent"
      duration: "2 hours"
      dependencies: ["development"]
      inputs:
        - business_type: "${initialization.business_type}"
        - site_content: "${development.cms_setup}"
        - current_seo: "${site_analysis.technical_analysis.seo}"
      tasks:
        - schema_markup:
            business_schema: true
            service_schema: true
            local_business: true
            review_schema: true
        - meta_optimization:
            title_tags: true
            meta_descriptions: true
            open_graph: true
            twitter_cards: true
        - technical_seo:
            sitemap_generation: true
            robots_txt: true
            canonical_tags: true
            structured_data: true
        - performance_optimization:
            core_web_vitals: true
            image_optimization: true
            lazy_loading: true
      outputs:
        - schema_implementation: "object"
        - meta_tags: "object"
        - technical_seo_config: "object"
        - performance_optimizations: "object"
      validation:
        - schema_valid: "100%"
        - meta_coverage: "100%"
        - seo_score: "> 95"

    - stage: "testing"
      description: "Test all functionality and performance"
      agent: "orchestrator"
      duration: "1 hour"
      dependencies: ["seo_implementation"]
      tasks:
        - functionality_testing:
            forms: true
            navigation: true
            integrations: true
            responsive_design: true
        - performance_testing:
            page_speed: true
            core_web_vitals: true
            mobile_optimization: true
        - seo_validation:
            schema_testing: true
            meta_verification: true
            sitemap_validation: true
        - cross_browser_testing:
            chrome: true
            firefox: true
            safari: true
            edge: true
      outputs:
        - test_results: "object"
        - performance_report: "object"
        - compatibility_report: "object"
      validation:
        - functionality_pass: "100%"
        - performance_targets: "met"
        - browser_compatibility: "100%"

    - stage: "deployment"
      description: "Deploy to staging and production"
      agent: "DeploymentAgent"
      duration: "1 hour"
      dependencies: ["testing"]
      inputs:
        - tested_site: "${testing.test_results}"
        - dns_plan: "${migration_planning.dns_plan}"
        - redirect_rules: "${migration_planning.redirect_rules}"
      tasks:
        - staging_deployment:
            vercel_staging: true
            subdomain_setup: true
            ssl_certificates: true
        - pre_production_testing:
            staging_validation: true
            client_approval: true
            final_checks: true
        - production_deployment:
            dns_cutover: true
            ssl_activation: true
            monitoring_setup: true
        - post_deployment:
            redirect_verification: true
            analytics_setup: true
            performance_monitoring: true
      outputs:
        - staging_url: "string"
        - production_url: "string"
        - deployment_status: "object"
        - monitoring_config: "object"
      validation:
        - staging_accessible: true
        - production_live: true
        - redirects_working: "100%"
        - ssl_active: true

    - stage: "documentation"
      description: "Create migration documentation and guides"
      agent: "DocumentationAgent"
      duration: "1 hour"
      dependencies: ["deployment"]
      inputs:
        - project_data: "all_stage_outputs"
        - deployment_config: "${deployment.monitoring_config}"
      tasks:
        - migration_report:
            technical_summary: true
            business_impact: true
            performance_comparison: true
        - maintenance_guides:
            cms_training: true
            troubleshooting: true
            update_procedures: true
        - handoff_documentation:
            client_training: true
            technical_handoff: true
            future_roadmap: true
      outputs:
        - migration_report: "document"
        - training_materials: "array"
        - maintenance_guides: "array"
        - handoff_package: "object"
      validation:
        - documentation_complete: true
        - training_ready: true
        - handoff_approved: true

# Quality Gates
quality_gates:
  before_staging_deploy:
    - all_pages_responsive: true
    - forms_functional: true
    - analytics_configured: true
    - schema_validated: true
    - performance_targets_met: true

  before_production_deploy:
    - performance_targets_met: true
    - seo_audit_passed: true
    - cross_browser_tested: true
    - client_approval_received: true
    - backup_verified: true

# Error Handling
error_handling:
  retry_policy:
    max_retries: 3
    backoff_strategy: "exponential"
    retry_on: ["network_error", "timeout", "rate_limit"]

  escalation:
    - level: "automatic_retry"
      attempts: 3
    - level: "alternative_approach"
      manual_intervention: false
    - level: "human_escalation"
      notification: "slack"
      contact: "project_manager"

# Notifications
notifications:
  slack:
    channels:
      - "#virgo-web-dev"
      - "#client-updates"
    events:
      - stage_completion
      - quality_gate_failure
      - deployment_success
      - error_escalation

  email:
    recipients:
      - "project-manager@virgo.com"
      - "client@company.com"
    events:
      - project_completion
      - critical_errors
      - deployment_success

# Performance Targets
performance_targets:
  pagespeed_mobile: 90
  pagespeed_desktop: 95
  seo_audit_score: 95
  accessibility_score: 90
  first_contentful_paint: "1.5s"
  largest_contentful_paint: "2.5s"
  cumulative_layout_shift: "< 0.1"